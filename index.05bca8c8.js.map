{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar getCellValue = function(tr, idx) {\n    return tr.children[idx].textContent.trim();\n};\nvar comparer = function(idx, asc) {\n    return function(a, b) {\n        var v1 = getCellValue(a, idx);\n        var v2 = getCellValue(b, idx);\n        if (!isNaN(parseFloat(v1)) && !isNaN(parseFloat(v2))) return (asc ? 1 : -1) * (parseFloat(v1) - parseFloat(v2));\n        return (asc ? 1 : -1) * v1.localeCompare(v2, undefined, {\n            numeric: true\n        });\n    };\n};\ndocument.querySelectorAll(\"th\").forEach(function(th) {\n    th.addEventListener(\"click\", function() {\n        var table = th.closest(\"table\");\n        var tbody = table.querySelector(\"tbody\");\n        var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n        var index = Array.from(th.parentNode.children).indexOf(th);\n        var isAsc = th.classList.contains(\"asc\");\n        isAsc = !isAsc;\n        th.classList.toggle(\"asc\", isAsc);\n        th.classList.toggle(\"desc\", !isAsc);\n        rows.sort(comparer(index, isAsc));\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\ndocument.querySelectorAll(\"tbody tr\").forEach(function(tr) {\n    tr.addEventListener(\"click\", function() {\n        document.querySelectorAll(\"tbody tr\").forEach(function(row) {\n            row.classList.remove(\"active\");\n        });\n        tr.classList.add(\"active\");\n    });\n});\nvar form = document.createElement(\"form\");\nform.className = \"new-employee-form\";\nform.innerHTML = '\\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\\n  <label>Office:\\n    <select name=\"office\" data-qa=\"office\">\\n      <option value=\"Tokyo\">Tokyo</option>\\n      <option value=\"Singapore\">Singapore</option>\\n      <option value=\"London\">London</option>\\n      <option value=\"New York\">New York</option>\\n      <option value=\"Edinburgh\">Edinburgh</option>\\n      <option value=\"San Francisco\">San Francisco</option>\\n    </select>\\n  </label>\\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\\n  <label>Salary: <input name=\"salary\" type=\"text\" data-qa=\"salary\"></label>\\n  <button type=\"submit\">Save to table</button>\\n';\ndocument.body.appendChild(form);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var namePerson = form.elements[\"name\"].value.trim();\n    var position = form.elements[\"position\"].value.trim();\n    var office = form.elements[\"office\"].value.trim();\n    var age = parseInt(form.elements[\"age\"].value.trim(), 10);\n    var salary = form.elements[\"salary\"].value.trim().replace(/[^0-9.-]+/g, \"\");\n    if (namePerson.length < 4) {\n        showNotification(\"Name must be at least 4 characters long\", \"error\");\n        return;\n    }\n    if (position.length === 0) {\n        showNotification(\"Position must not be empty\", \"error\");\n        return;\n    }\n    if (age < 18 || age > 90) {\n        showNotification(\"Age must be between 18 and 90\", \"error\");\n        return;\n    }\n    if (isNaN(salary)) {\n        showNotification(\"Salary must be a valid number\", \"error\");\n        return;\n    }\n    var formattedSalary = \"$\" + parseFloat(salary).toLocaleString(\"en-US\");\n    var table = document.querySelector(\"table tbody\");\n    var row = document.createElement(\"tr\");\n    row.innerHTML = \"\\n    <td>\".concat(namePerson, \"</td>\\n    <td>\").concat(position, \"</td>\\n    <td>\").concat(office, \"</td>\\n    <td>\").concat(age, \"</td>\\n    <td>\").concat(formattedSalary, \"</td>\\n  \");\n    table.appendChild(row);\n    showNotification(\"New employee added successfully\", \"success\");\n    form.reset();\n});\nfunction showNotification(message, type) {\n    var notification = document.createElement(\"div\");\n    notification.className = type;\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.textContent = message;\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 3000);\n}\ndocument.querySelectorAll(\"td\").forEach(function(td) {\n    td.addEventListener(\"dblclick\", function() {\n        var input = document.createElement(\"input\");\n        input.className = \"cell-input\";\n        input.value = td.textContent;\n        input.defaultValue = td.textContent.trim();\n        td.textContent = \"\";\n        td.appendChild(input);\n        input.focus();\n        input.addEventListener(\"blur\", function() {\n            td.textContent = input.value.trim() || input.defaultValue;\n            input.remove();\n        });\n        input.addEventListener(\"keypress\", function(e) {\n            if (e.key === \"Enter\") {\n                td.textContent = input.value.trim() || input.defaultValue;\n                input.remove();\n            }\n        });\n    });\n});\n\n//# sourceMappingURL=index.05bca8c8.js.map\n","'use strict';\n\nconst getCellValue = (tr, idx) => tr.children[idx].textContent.trim();\n\nconst comparer = (idx, asc) => (a, b) => {\n  const v1 = getCellValue(a, idx);\n  const v2 = getCellValue(b, idx);\n\n  if (!isNaN(parseFloat(v1)) && !isNaN(parseFloat(v2))) {\n    return (asc ? 1 : -1) * (parseFloat(v1) - parseFloat(v2));\n  }\n\n  return (asc ? 1 : -1) * v1.localeCompare(v2, undefined, { numeric: true });\n};\n\ndocument.querySelectorAll('th').forEach((th) => {\n  th.addEventListener('click', () => {\n    const table = th.closest('table');\n    const tbody = table.querySelector('tbody');\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n\n    const index = Array.from(th.parentNode.children).indexOf(th);\n    let isAsc = th.classList.contains('asc');\n\n    isAsc = !isAsc;\n    th.classList.toggle('asc', isAsc);\n    th.classList.toggle('desc', !isAsc);\n\n    rows.sort(comparer(index, isAsc));\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n\ndocument.querySelectorAll('tbody tr').forEach((tr) => {\n  tr.addEventListener('click', () => {\n    document.querySelectorAll('tbody tr').forEach((row) => {\n      row.classList.remove('active');\n    });\n\n    tr.classList.add('active');\n  });\n});\n\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nform.innerHTML = `\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n  <label>Salary: <input name=\"salary\" type=\"text\" data-qa=\"salary\"></label>\n  <button type=\"submit\">Save to table</button>\n`;\n\ndocument.body.appendChild(form);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const namePerson = form.elements['name'].value.trim();\n  const position = form.elements['position'].value.trim();\n  const office = form.elements['office'].value.trim();\n  const age = parseInt(form.elements['age'].value.trim(), 10);\n  const salary = form.elements['salary'].value.trim().replace(/[^0-9.-]+/g, '');\n\n  if (namePerson.length < 4) {\n    showNotification('Name must be at least 4 characters long', 'error');\n\n    return;\n  }\n\n  if (position.length === 0) {\n    showNotification('Position must not be empty', 'error');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    showNotification('Age must be between 18 and 90', 'error');\n\n    return;\n  }\n\n  if (isNaN(salary)) {\n    showNotification('Salary must be a valid number', 'error');\n\n    return;\n  }\n\n  const formattedSalary = '$' + parseFloat(salary).toLocaleString('en-US');\n\n  const table = document.querySelector('table tbody');\n  const row = document.createElement('tr');\n\n  row.innerHTML = `\n    <td>${namePerson}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>${formattedSalary}</td>\n  `;\n\n  table.appendChild(row);\n\n  showNotification('New employee added successfully', 'success');\n  form.reset();\n});\n\nfunction showNotification(message, type) {\n  const notification = document.createElement('div');\n\n  notification.className = type;\n  notification.setAttribute('data-qa', 'notification');\n  notification.textContent = message;\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n}\n\ndocument.querySelectorAll('td').forEach((td) => {\n  td.addEventListener('dblclick', () => {\n    const input = document.createElement('input');\n\n    input.className = 'cell-input';\n    input.value = td.textContent;\n    input.defaultValue = td.textContent.trim();\n    td.textContent = '';\n    td.appendChild(input);\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      td.textContent = input.value.trim() || input.defaultValue;\n      input.remove();\n    });\n\n    input.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        td.textContent = input.value.trim() || input.defaultValue;\n        input.remove();\n      }\n    });\n  });\n});\n"],"names":["getCellValue","tr","idx","children","textContent","trim","document","querySelectorAll","forEach","th","addEventListener","asc","tbody","table","closest","querySelector","rows","Array","from","index","parentNode","indexOf","isAsc","classList","contains","toggle","sort","a","b","v1","v2","isNaN","parseFloat","localeCompare","undefined","numeric","row","appendChild","remove","add","form","createElement","showNotification","message","type","notification","className","setAttribute","body","setTimeout","innerHTML","e","preventDefault","namePerson","elements","value","position","office","age","parseInt","salary","replace","length","formattedSalary","toLocaleString","concat","reset","td","input","defaultValue","focus","key"],"version":3,"file":"index.05bca8c8.js.map"}